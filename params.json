{"name":"Cron God","tagline":"Python cron task wrapper","body":"# Cron God\r\n\r\nManage cron timeouts and logging. Inspired by [cronic](http://habilis.net/cronic/).\r\n\r\nCron God suppresses emails if the task succeeds, but still lets you log. It optionally supports distributed locking via Redis.\r\n\r\nIf a task fails, Crong God sends you a neatly-formatted email containing the task's result code, stderr, stdout, and the task's trace.\r\n\r\n## Features\r\n\r\n - Enforced timeouts\r\n - Logstash integration\r\n - Locking (distributed and local)\r\n - Output suppression for non-exceptional jobs\r\n\r\n## Usage\r\n\r\n```\r\nusage: crongod [-h] --name NAME [--version VERSION]\r\n               [--log-level {debug,info,warning,error,critial}]\r\n               [--timeout TIMEOUT] [--lock-type {file,redis,none}]\r\n               [--lock-blocking] [--lock-prefix LOCK_PREFIX]\r\n               [--redis-host REDIS_HOST] [--redis-port REDIS_PORT]\r\n               [--redis-db REDIS_DB] [--redis-key REDIS_KEY]\r\n               cmd ...\r\n```\r\n\r\n## Usage examples\r\n\r\nConsider a Bash script called `example.sh`:\r\n\r\n```bash\r\n#! /bin/bash\r\nset -eux\r\necho \"Hello!\"\r\nsleep 10\r\necho \"All done.\"\r\n\r\nexit 1\r\n```\r\n\r\n### Enforced timeouts\r\n\r\n```\r\n$ crongod --name test --timeout 5 ./example.sh\r\n\r\n-------------------------\r\nError during supervised task!\r\n-------------------------\r\nCmd: ./example.sh\r\nReturn code: -15\r\nStart time: 2013-12-31 01:55:29.780062\r\nEnd time: 2013-12-31 01:55:36.000220\r\nTotal run time: 0:00:06.220158\r\nTimeout: 0:00:05\r\nTimeline:\r\n  * 2013-12-31 01:55:29.780244 - task started (PID 18901)\r\n  * 2013-12-31 01:55:34.998966 - timed out\r\n  * 2013-12-31 01:55:34.999019 - forceful termination\r\n  * 2013-12-31 01:55:36.000234 - task stopped\r\n-------------------------\r\n\r\n***STDOUT***:\r\nHello!\r\n\r\n\r\n***STDERR***:\r\n\r\n\r\n***TRACE***:\r\n+ echo 'Hello!'\r\n+ sleep 10\r\n```\r\n\r\n### Exceptional return codes\r\n\r\n```\r\n$ crongod --name test ./example.sh\r\n-------------------------\r\nError during supervised task!\r\n-------------------------\r\nCmd: ./example.sh\r\nReturn code: 1\r\nStart time: 2013-12-31 01:56:26.390580\r\nEnd time: 2013-12-31 01:56:36.561805\r\nTotal run time: 0:00:10.171225\r\nTimeout: None\r\nTimeline:\r\n  * 2013-12-31 01:56:26.390895 - task started (PID 18915)\r\n  * 2013-12-31 01:56:36.561828 - task stopped\r\n-------------------------\r\n\r\n***STDOUT***:\r\nHello!\r\nAll done.\r\n\r\n\r\n***STDERR***:\r\n\r\n\r\n***TRACE***:\r\n+ echo 'Hello!'\r\n+ sleep 10\r\n+ echo 'All done.'\r\n+ exit 1\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}